# name: üêç Create Image-reduction Tag and Release 

# on:
#   pull_request:
#     branches:
#       - main
#     types:
#       - closed

# jobs:
#   build:
#     name: Upload Image-reduction Release Asset
#     if: startsWith(github.head_ref, 'release/') && github.base_ref == 'main' && github.event.action == 'closed' && github.event.pull_request.merged == true
#     runs-on: ubuntu-latest

#     permissions:
#       issues: write
#       contents: write


#     steps:

#       - name: üìÇ Checkout code
#         uses: actions/checkout@v4

#       - name: üì¶Ô∏è Create ZIP Archive
#         run: zip -r repository.zip .           

#       - name: üè∑Ô∏è get tag name
#         run: |
#           pr_branch=${{ github.event.pull_request.head.ref }}
#           tag=$(echo "$pr_branch" | awk -F'/' '{print $NF}')
#           echo "TAG=$tag" >> $GITHUB_ENV

#       - name: üîñ Create Tag
#         id: create_tag
#         run: |
#           git tag ${{ env.TAG }}
#           git push origin ${{ env.TAG }}

#       - name: üì¶Ô∏è Create Release
#         uses: ncipollo/release-action@v1
#         with:
#           artifacts: ./repository.zip
#           tag: ${{ env.TAG }}


#       - name: Generate release notes
#         uses: raulanatol/github-actions-releaser@main
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           TAG_NAME: v10.0.4

name: Release
on: push
   
jobs:
  find-the-previous-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: find-the-previous-release
        run: |
          previous_release_created_at=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" "https://api.github.com/repos/${GITHUB_REPOSITORY}/releases" | jq -r 'map({created_at: .created_at}) | .[-2].created_at')
          echo $previous_release_created_at