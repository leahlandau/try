name: 🚀 Build and deploy to Azure Function App

on:
  push
  # workflow_dispatch:
  #   inputs:
  #     branchName:
  #       description: 'branch name'
  #       required: true

env:
  WORKING_DIR: services

jobs:
  # collect_dirs:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     dirs: ${{ steps.dirs.outputs.dirs }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - id: dirs
  #       run: echo "dirs=$(ls -d services/*/*/ | jq --raw-input --slurp --compact-output 'split("\n")[:-1]')" >> ${GITHUB_OUTPUT}

  # run_tests:
  #   needs: collect_dirs
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       dir: ${{ fromJson(needs.collect_dirs.outputs.dirs) }}
  #   steps:
  #     - run: echo ${{ matrix.dir }}

  setup:
    runs-on: "ubuntu-latest"
    outputs:
      TAG: ${{ steps.get_release.outputs.tag_name }}
      MATRIX: ${{ steps.sub-directories.outputs.dirs }}
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: list sub-directories
        id: sub-directories
        run: echo "dirs=$(ls -d services/*/*/ | jq --raw-input --slurp --compact-output 'split("\n")[:-1]')" >> ${GITHUB_OUTPUT}

      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: 🔖 Get release tag name
        id: get_release
        uses: cardinalby/git-get-release-action@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          latest: true

  build-and-deploy:
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
    needs: setup
    env:
      TAG: ${{ needs.setup.outputs.TAG }}
    strategy:
      matrix:
        directory: 
          - services/emails/deployment-functionapps
    steps:
      - name: 📂 Checkout repository
        uses: actions/checkout@v4
      - name: 🔑 Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 🔑 Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: 🧰 Check and copy necessary files
        run: |
          REQUIRED_FILES=(".funcignore" "host.json" "Dockerfile" ".dockerignore")
          for file in "${REQUIRED_FILES[@]}"; do
            echo "${file} found in ${COMMON_FILES_PATH}, copying from there"
            cp "./${{ env.WORKING_DIR }}/${file}" "${{ matrix.directory }}/"
          done

      - name: 🔄 Extract Last Directory Level
        id: get-last-level
        run: |
          LAST_LEVEL=$(echo ${{ matrix.directory }} | xargs -n 1 basename)
          echo "LAST_LEVEL=$LAST_LEVEL" >> "$GITHUB_ENV"

      - name: 🐳 Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ env.LAST_LEVEL }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ env.TAG }}
            type=semver,pattern={{major}}.{{minor}},value=${{ env.TAG }}
            type=semver,pattern={{major}},value=${{ env.TAG }}

      - name: 🏗️ Build and push container image to registry
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.directory }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          file: ./${{ matrix.directory }}/Dockerfile

      - name: 🚀 Deploy to Azure Functions
        id: deploy-to-functions
        uses: Azure/functions-container-action@v1
        with:
          app-name: ${{ steps.get-last-level.outputs.last_level }}
          image: ghcr.io/${{ github.repository }}/${{ env.LAST_LEVEL }}:${{ env.TAG }}
